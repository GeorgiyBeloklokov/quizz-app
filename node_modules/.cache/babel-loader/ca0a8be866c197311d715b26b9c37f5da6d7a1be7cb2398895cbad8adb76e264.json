{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\diskD\\\\diskD\\\\my\\\\read-books\\\\src\\\\components\\\\AppDrawer\\\\AppDrawer.tsx\",\n  _s = $RefreshSig$();\nimport { useState, Fragment } from 'react';\nimport Box from '@mui/material/Box';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppDrawer() {\n  _s();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({\n      ...state,\n      [anchor]: open\n    });\n  };\n  const list = anchor => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250\n    },\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ['right'].map(anchor => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(anchor, true),\n        children: anchor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n        anchor: anchor,\n        open: state[anchor],\n        onClose: toggleDrawer(anchor, false),\n        onOpen: toggleDrawer(anchor, true),\n        children: list(anchor)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, anchor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(AppDrawer, \"mrP2scG11YaBBfM2gqRg58YN+SA=\");\n_c = AppDrawer;\nvar _c;\n$RefreshReg$(_c, \"AppDrawer\");","map":{"version":3,"names":["useState","Fragment","Box","SwipeableDrawer","Button","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","InboxIcon","MailIcon","AppDrawer","state","setState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","list","width","map","text","index"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/components/AppDrawer/AppDrawer.tsx"],"sourcesContent":["import { useState, KeyboardEvent, Fragment } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\nexport default function AppDrawer() {\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer =\r\n    (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event &&\r\n        event.type === 'keydown' &&\r\n        ((event as KeyboardEvent).key === 'Tab' || (event as KeyboardEvent).key === 'Shift')\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {(['right'] as const).map((anchor) => (\r\n        <Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
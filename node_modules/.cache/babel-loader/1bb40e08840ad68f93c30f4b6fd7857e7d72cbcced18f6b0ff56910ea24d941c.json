{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\diskD\\\\diskD\\\\my\\\\read-books\\\\src\\\\components\\\\FormQuestion\\\\TitleQuiz.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Container, Paper, TextField, Typography } from '@mui/material';\nimport { SERVICE_MESSAGES } from '../utils/constants';\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\nimport { CreateQuizBox2, TitleQuizPaper, TitleQuizPaperBtn } from './styles';\nimport { useState } from 'react';\nimport { useAppDispatch } from '../../store/hooks';\nimport { addCard } from '../../store/reducers/cardSlice';\nimport { BlockQuiz } from '../../components/FormQuestion/BlockQuiz';\nimport { BtnAddBlock } from '../BtnAddBlock/BtnAddBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TitleQuiz = props => {\n  _s();\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState('');\n  const [desription, setDescription] = useState('');\n  const [img, setImg] = useState('');\n  const [blockQuestion, setBlockQuestion] = useState(['first']);\n  const {\n    block,\n    setBlock\n  } = props;\n  const addNewCard = () => dispatch(addCard({\n    title,\n    img,\n    date: new Date().toISOString(),\n    desription,\n    questionsArr: [],\n    passed: false,\n    passedOn: 0\n  }));\n  function handleClick() {\n    setBlock([...block, new Date().toString()]);\n  }\n  const blocksQuestion = block.map((el, id) => {\n    return /*#__PURE__*/_jsxDEV(BlockQuiz, {\n      name: el,\n      id: el,\n      setBlock: setBlockQuestion,\n      block: blockQuestion,\n      num: id + 1\n    }, el, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      margin: '0 auto',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'start',\n      flexWrap: 'wrap',\n      gap: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: TitleQuizPaper,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: '2px'\n          },\n          children: SERVICE_MESSAGES.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          rows: 2,\n          placeholder: SERVICE_MESSAGES.writeSmth,\n          sx: {\n            width: '100%'\n          },\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: '2px'\n          },\n          children: SERVICE_MESSAGES.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-static\",\n          multiline: true,\n          rows: 3,\n          placeholder: SERVICE_MESSAGES.writeSmth,\n          sx: {\n            width: '100%'\n          },\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: SERVICE_MESSAGES.addImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          rows: 1,\n          placeholder: SERVICE_MESSAGES.addLink,\n          sx: {\n            width: '100%',\n            mb: '15px'\n          },\n          onChange: e => setImg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: TitleQuizPaperBtn,\n        children: [/*#__PURE__*/_jsxDEV(ControlPointIcon, {\n          sx: {\n            color: 'rgb(255, 110, 3)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            textTransform: 'uppercase'\n          },\n          onClick: handleClick,\n          children: SERVICE_MESSAGES.addQBlock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: CreateQuizBox2,\n      children: [blocksQuestion, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          m: '0 auto',\n          color: '#ffffff'\n        },\n        onClick: addNewCard,\n        children: SERVICE_MESSAGES.configure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BtnAddBlock, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TitleQuiz, \"3CP+CHNcjSmk7rIuBAaVSGit8aY=\", false, function () {\n  return [useAppDispatch];\n});\n_c = TitleQuiz;\nvar _c;\n$RefreshReg$(_c, \"TitleQuiz\");","map":{"version":3,"names":["Box","Button","Container","Paper","TextField","Typography","SERVICE_MESSAGES","ControlPointIcon","CreateQuizBox2","TitleQuizPaper","TitleQuizPaperBtn","useState","useAppDispatch","addCard","BlockQuiz","BtnAddBlock","TitleQuiz","props","dispatch","title","setTitle","desription","setDescription","img","setImg","blockQuestion","setBlockQuestion","block","setBlock","addNewCard","date","Date","toISOString","questionsArr","passed","passedOn","handleClick","toString","blocksQuestion","map","el","id","margin","display","justifyContent","alignItems","flexWrap","gap","mb","writeSmth","width","e","target","value","description","addImage","addLink","color","textTransform","addQBlock","m","configure"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/components/FormQuestion/TitleQuiz.tsx"],"sourcesContent":["import { Box, Button, Container, Paper, TextField, Typography } from '@mui/material';\r\nimport { SERVICE_MESSAGES } from '../utils/constants';\r\nimport ControlPointIcon from '@mui/icons-material/ControlPoint';\r\nimport { CreateQuizBox2, TitleQuizPaper, TitleQuizPaperBtn } from './styles';\r\nimport { ChangeEvent, useState } from 'react';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport { addCard } from '../../store/reducers/cardSlice';\r\nimport { BlockQuiz } from '../../components/FormQuestion/BlockQuiz';\r\nimport { ITitleQuiz } from '../../components/utils/types';\r\nimport { BtnAddBlock } from '../BtnAddBlock/BtnAddBlock';\r\n\r\nexport const TitleQuiz = (props: ITitleQuiz) => {\r\n  const dispatch = useAppDispatch();\r\n  const [title, setTitle] = useState('');\r\n  const [desription, setDescription] = useState('');\r\n  const [img, setImg] = useState('');\r\n  const [blockQuestion, setBlockQuestion] = useState(['first']);\r\n  const { block, setBlock } = props;\r\n\r\n  const addNewCard = () =>\r\n    dispatch(\r\n      addCard({\r\n        title,\r\n        img,\r\n        date: new Date().toISOString(),\r\n        desription,\r\n        questionsArr: [],\r\n        passed: false,\r\n        passedOn: 0,\r\n      })\r\n    );\r\n\r\n  function handleClick() {\r\n    setBlock([...block, new Date().toString()]);\r\n  }\r\n\r\n  const blocksQuestion = block.map((el, id) => {\r\n    return (\r\n      <BlockQuiz\r\n        name={el}\r\n        key={el}\r\n        id={el}\r\n        setBlock={setBlockQuestion}\r\n        block={blockQuestion}\r\n        num={id + 1}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <Container\r\n      sx={{\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'start',\r\n        flexWrap: 'wrap',\r\n        gap: '20px',\r\n      }}\r\n    >\r\n      <Paper elevation={3} sx={TitleQuizPaper}>\r\n        <Box>\r\n          <Typography sx={{ mb: '2px' }}>{SERVICE_MESSAGES.title}</Typography>\r\n          <TextField\r\n            multiline\r\n            rows={2}\r\n            placeholder={SERVICE_MESSAGES.writeSmth}\r\n            sx={{ width: '100%' }}\r\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Typography sx={{ mb: '2px' }}>{SERVICE_MESSAGES.description}</Typography>\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            multiline\r\n            rows={3}\r\n            placeholder={SERVICE_MESSAGES.writeSmth}\r\n            sx={{ width: '100%' }}\r\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setDescription(e.target.value)}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Typography>{SERVICE_MESSAGES.addImage}</Typography>\r\n          <TextField\r\n            multiline\r\n            rows={1}\r\n            placeholder={SERVICE_MESSAGES.addLink}\r\n            sx={{ width: '100%', mb: '15px' }}\r\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setImg(e.target.value)}\r\n          />\r\n        </Box>\r\n        <Button sx={TitleQuizPaperBtn}>\r\n          <ControlPointIcon sx={{ color: 'rgb(255, 110, 3)' }} />\r\n          <Typography sx={{ textTransform: 'uppercase' }} onClick={handleClick}>\r\n            {SERVICE_MESSAGES.addQBlock}\r\n          </Typography>\r\n        </Button>\r\n      </Paper>\r\n      <Box sx={CreateQuizBox2}>\r\n        {blocksQuestion}\r\n        <Button variant=\"contained\" sx={{ m: '0 auto', color: '#ffffff' }} onClick={addNewCard}>\r\n          {SERVICE_MESSAGES.configure}\r\n        </Button>\r\n      </Box>\r\n      <BtnAddBlock handleClick={handleClick} />\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './reducers/counterSlice';\nimport { booksApi } from './booksApi';\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    [booksApi.reducerPath]: booksApi.reducer\n  },\n  middleware: getDefaultMiddlware => getDefaultMiddlware().concat(booksApi.middleware)\n});","map":{"version":3,"names":["configureStore","counterReducer","booksApi","store","reducer","counter","reducerPath","middleware","getDefaultMiddlware","concat"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from './reducers/counterSlice';\r\nimport { booksApi } from './booksApi';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    [booksApi.reducerPath]: booksApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddlware) => getDefaultMiddlware().concat(booksApi.middleware),\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,OAAO,EAAEJ,cAAc;IACvB,CAACC,QAAQ,CAACI,WAAW,GAAGJ,QAAQ,CAACE;EACnC,CAAC;EACDG,UAAU,EAAGC,mBAAmB,IAAKA,mBAAmB,EAAE,CAACC,MAAM,CAACP,QAAQ,CAACK,UAAU;AACvF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
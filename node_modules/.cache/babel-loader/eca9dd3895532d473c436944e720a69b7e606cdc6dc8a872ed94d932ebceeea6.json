{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\diskD\\\\diskD\\\\my\\\\read-books\\\\src\\\\components\\\\Test\\\\Test.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, FormControl, Grid, Typography } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { BreadcrumbsTest } from '../Breadcrumbs/BreadcrumbsTest';\nimport { ModalTestComplete } from '../ModalTestComplete/ModalTestComplete';\nimport { TestItem } from '../TestItem/TestItem';\nimport { SERVICE_MESSAGES } from '../utils/constants';\nimport { useAppSelector } from '../../store/hooks';\nimport { addTestReduser } from '../../store/reducers/testsSlice';\nimport style from './Test.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Test = () => {\n  _s();\n  var _card$questionsArr;\n  const {\n    id\n  } = useParams();\n  const allCards = useAppSelector(state => state.cards.list);\n  let card = allCards[0];\n  allCards.forEach(el => {\n    if (el.id === Number(id)) {\n      card = el;\n    }\n  });\n  const questions = (_card$questionsArr = card.questionsArr) !== null && _card$questionsArr !== void 0 ? _card$questionsArr : [];\n  const [score, setScore] = useState(0);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleOpen();\n    const result = {\n      id: id,\n      score: score,\n      date: new Date().toLocaleString(),\n      passed: true,\n      failed: score * 100 / questions.length > 79 ? true : false\n    };\n    dispatch(addTestReduser(result));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: style.test,\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbsTest, {\n      title: card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: style.test__card,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: style.test__description,\n        sx: {\n          m: 0\n        },\n        children: card.desription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            maxWidth: '1000px',\n            mb: 15\n          },\n          className: style.test__quest,\n          children: questions.map((question, id) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(TestItem, {\n              question: question,\n              score: score,\n              setScore: setScore\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            m: '0 auto',\n            color: '#ffffff',\n            mt: '20px'\n          },\n          type: \"submit\",\n          children: SERVICE_MESSAGES.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalTestComplete, {\n      open: open,\n      handleClose: handleClose,\n      score: score,\n      countOfquestions: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"eEnAOslebhOBBiShlvqN8sRHSn4=\", false, function () {\n  return [useParams, useAppSelector, useDispatch];\n});\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["Box","Button","FormControl","Grid","Typography","Paper","useState","useDispatch","useParams","BreadcrumbsTest","ModalTestComplete","TestItem","SERVICE_MESSAGES","useAppSelector","addTestReduser","style","Test","id","allCards","state","cards","list","card","forEach","el","Number","questions","questionsArr","score","setScore","open","setOpen","handleOpen","handleClose","dispatch","handleSubmit","event","preventDefault","result","date","Date","toLocaleString","passed","failed","length","test","title","test__card","test__description","m","desription","margin","maxWidth","mb","test__quest","map","question","color","mt","check"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/components/Test/Test.tsx"],"sourcesContent":["import { Box, Button, FormControl, Grid, Typography } from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport { FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BreadcrumbsTest } from '../Breadcrumbs/BreadcrumbsTest';\r\nimport { ModalTestComplete } from '../ModalTestComplete/ModalTestComplete';\r\nimport { TestItem } from '../TestItem/TestItem';\r\nimport { SERVICE_MESSAGES } from '../utils/constants';\r\nimport { useAppSelector } from '../../store/hooks';\r\nimport { addTestReduser } from '../../store/reducers/testsSlice';\r\nimport style from './Test.module.css';\r\n\r\nexport const Test = () => {\r\n  const { id } = useParams();\r\n  const allCards = useAppSelector((state) => state.cards.list);\r\n  let card = allCards[0];\r\n  allCards.forEach((el) => {\r\n    if (el.id === Number(id)) {\r\n      card = el;\r\n    }\r\n  });\r\n  const questions = card.questionsArr ?? [];\r\n  const [score, setScore] = useState(0);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    handleOpen();\r\n    const result = {\r\n      id: id,\r\n      score: score,\r\n      date: new Date().toLocaleString(),\r\n      passed: true,\r\n      failed: (score * 100) / questions.length > 79 ? true : false,\r\n    };\r\n    dispatch(addTestReduser(result));\r\n  };\r\n  return (\r\n    <Box className={style.test}>\r\n      <BreadcrumbsTest title={card.title} />\r\n      <Paper className={style.test__card}>\r\n        {/* <CardMedia component=\"img\" image={card.img} alt=\"card\" height={245} /> */}\r\n        {/* <Typography variant=\"h4\" className={style.test__title}>{card.title} -\r\n        </Typography> */}\r\n        <Typography className={style.test__description} sx={{ m: 0 }}>\r\n          {card.desription}\r\n        </Typography>\r\n      </Paper>\r\n      <form onSubmit={handleSubmit} style={{ margin: '0 auto' }}>\r\n        <FormControl>\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            sx={{ maxWidth: '1000px', mb: 15 }}\r\n            className={style.test__quest}\r\n          >\r\n            {questions.map((question, id) => (\r\n              <Grid item xs={12} md={12} sm={12} key={id}>\r\n                <TestItem question={question} key={id} score={score} setScore={setScore} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ m: '0 auto', color: '#ffffff', mt: '20px' }}\r\n            type=\"submit\"\r\n          >\r\n            {SERVICE_MESSAGES.check}\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n      <ModalTestComplete\r\n        open={open}\r\n        handleClose={handleClose}\r\n        score={score}\r\n        countOfquestions={questions.length}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
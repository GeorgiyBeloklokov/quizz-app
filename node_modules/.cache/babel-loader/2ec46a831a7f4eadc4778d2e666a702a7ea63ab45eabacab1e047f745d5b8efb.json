{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  list: []\n};\nexport const testsSlice = createSlice({\n  name: 'tests',\n  initialState,\n  reducers: {\n    addTestReduser: (state, action) => {\n      state.list.push(action.payload);\n    }\n  }\n});\nexport const {\n  addTestReduser\n} = testsSlice.actions;\nexport default testsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","list","testsSlice","name","reducers","addTestReduser","state","action","push","payload","actions","reducer"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/reducers/testsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport interface TestData {\r\n  id: string | undefined;\r\n  score: number;\r\n  date: string;\r\n  passed: boolean;\r\n  failed: boolean;\r\n}\r\n\r\nexport interface CardList {\r\n  list: TestData[];\r\n}\r\n\r\nexport const initialState: CardList = {\r\n  list: [],\r\n};\r\n\r\nexport const testsSlice = createSlice({\r\n  name: 'tests',\r\n  initialState,\r\n  reducers: {\r\n    addTestReduser: (state, action: PayloadAction<TestData>) => {\r\n      state.list.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTestReduser } = testsSlice.actions;\r\n\r\nexport default testsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAc7D,OAAO,MAAMC,YAAsB,GAAG;EACpCC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;EACpCI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAA+B,KAAK;MAC1DD,KAAK,CAACL,IAAI,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAe,CAAC,GAAGH,UAAU,CAACQ,OAAO;AAEpD,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
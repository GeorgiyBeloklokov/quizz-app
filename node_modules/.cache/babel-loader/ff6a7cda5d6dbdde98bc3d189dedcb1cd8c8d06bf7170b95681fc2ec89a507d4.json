{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\diskD\\\\diskD\\\\my\\\\read-books\\\\src\\\\components\\\\ModalTestComplete\\\\ModalTestComplete.tsx\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { SERVICE_MESSAGES } from '../utils/constants';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Button, Link } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #19d2f1',\n  borderRadius: '5px',\n  boxShadow: 24,\n  p: 4\n};\nexport const ModalTestComplete = props => {\n  const {\n    open,\n    handleClose,\n    score,\n    countOfquestions\n  } = props;\n  const percent = score * 100 / countOfquestions;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: SERVICE_MESSAGES.complete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: percent > 79 ? `${SERVICE_MESSAGES.congratulations}${percent}%` : `${SERVICE_MESSAGES.fail}${percent}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/\",\n          underline: \"none\",\n          sx: {\n            mt: '50px',\n            display: 'block',\n            textAlign: 'end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              color: '#fff',\n              letterSpacing: '.1em'\n            },\n            children: SERVICE_MESSAGES.toMain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = ModalTestComplete;\nvar _c;\n$RefreshReg$(_c, \"ModalTestComplete\");","map":{"version":3,"names":["Box","Typography","Modal","SERVICE_MESSAGES","Link","RouterLink","Button","style","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","p","ModalTestComplete","props","open","handleClose","score","countOfquestions","percent","complete","mt","congratulations","fail","display","textAlign","color","letterSpacing","toMain"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/components/ModalTestComplete/ModalTestComplete.tsx"],"sourcesContent":["import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { SERVICE_MESSAGES } from '../utils/constants';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Button, Link } from '@mui/material';\r\n\r\ninterface IModalTestComplete {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  score: number;\r\n  countOfquestions: number;\r\n}\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #19d2f1',\r\n  borderRadius: '5px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport const ModalTestComplete = (props: IModalTestComplete) => {\r\n  const { open, handleClose, score, countOfquestions } = props;\r\n  const percent = (score * 100) / countOfquestions;\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {SERVICE_MESSAGES.complete}\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {percent > 79\r\n              ? `${SERVICE_MESSAGES.congratulations}${percent}%`\r\n              : `${SERVICE_MESSAGES.fail}${percent}%`}\r\n          </Typography>\r\n          <Link\r\n            component={RouterLink}\r\n            to=\"/\"\r\n            underline=\"none\"\r\n            sx={{ mt: '50px', display: 'block', textAlign: 'end' }}\r\n          >\r\n            <Button variant=\"contained\" sx={{ color: '#fff', letterSpacing: '.1em' }}>\r\n              {SERVICE_MESSAGES.toMain}\r\n            </Button>\r\n          </Link>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,SAASC,MAAM,EAAEF,IAAI,QAAQ,eAAe;AAAC;AAS7C,MAAMG,KAAK,GAAG;EACZC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE,uBAAuB;EAClCC,KAAK,EAAE,GAAG;EACVC,OAAO,EAAE,kBAAkB;EAC3BC,MAAM,EAAE,mBAAmB;EAC3BC,YAAY,EAAE,KAAK;EACnBC,SAAS,EAAE,EAAE;EACbC,CAAC,EAAE;AACL,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAIC,KAAyB,IAAK;EAC9D,MAAM;IAAEC,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAiB,CAAC,GAAGJ,KAAK;EAC5D,MAAMK,OAAO,GAAIF,KAAK,GAAG,GAAG,GAAIC,gBAAgB;EAChD,oBACE;IAAA,uBACE,QAAC,KAAK;MACJ,IAAI,EAAEH,IAAK;MACX,OAAO,EAAEC,WAAY;MACrB,mBAAgB,mBAAmB;MACnC,oBAAiB,yBAAyB;MAAA,uBAE1C,QAAC,GAAG;QAAC,EAAE,EAAEd,KAAM;QAAA,wBACb,QAAC,UAAU;UAAC,EAAE,EAAC,mBAAmB;UAAC,OAAO,EAAC,IAAI;UAAC,SAAS,EAAC,IAAI;UAAA,UAC3DJ,gBAAgB,CAACsB;QAAQ;UAAA;UAAA;UAAA;QAAA,QACf,eACb,QAAC,UAAU;UAAC,EAAE,EAAC,yBAAyB;UAAC,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAA,UACpDF,OAAO,GAAG,EAAE,GACR,GAAErB,gBAAgB,CAACwB,eAAgB,GAAEH,OAAQ,GAAE,GAC/C,GAAErB,gBAAgB,CAACyB,IAAK,GAAEJ,OAAQ;QAAE;UAAA;UAAA;UAAA;QAAA,QAC9B,eACb,QAAC,IAAI;UACH,SAAS,EAAEnB,UAAW;UACtB,EAAE,EAAC,GAAG;UACN,SAAS,EAAC,MAAM;UAChB,EAAE,EAAE;YAAEqB,EAAE,EAAE,MAAM;YAAEG,OAAO,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAM,CAAE;UAAA,uBAEvD,QAAC,MAAM;YAAC,OAAO,EAAC,WAAW;YAAC,EAAE,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,aAAa,EAAE;YAAO,CAAE;YAAA,UACtE7B,gBAAgB,CAAC8B;UAAM;YAAA;YAAA;YAAA;UAAA;QACjB;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KAlCWf,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
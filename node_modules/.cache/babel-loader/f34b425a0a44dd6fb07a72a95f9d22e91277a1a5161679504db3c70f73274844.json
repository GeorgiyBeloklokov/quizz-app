{"ast":null,"code":"import { fetchBaseQuery } from '@reduxjs/toolkit/dist/query';\nexport const baseUrl = `${process.env.REACT_APP_SERVER_ENDPOINT}/`;\nexport const baseQuery = fetchBaseQuery({\n  baseUrl\n});\nexport const customFetchBase = async (args, api, extraOptions) => {\n  return await baseQuery(args, api, extraOptions);\n};","map":{"version":3,"names":["fetchBaseQuery","baseUrl","process","env","REACT_APP_SERVER_ENDPOINT","baseQuery","customFetchBase","args","api","extraOptions"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/api/index.ts"],"sourcesContent":["import {\r\n  BaseQueryFn,\r\n  FetchArgs,\r\n  fetchBaseQuery,\r\n  FetchBaseQueryError,\r\n} from '@reduxjs/toolkit/dist/query';\r\n\r\nexport interface IGenericResponse {\r\n  status: string;\r\n  message: string;\r\n}\r\n\r\nexport const baseUrl = `${process.env.REACT_APP_SERVER_ENDPOINT}/`;\r\nexport const baseQuery = fetchBaseQuery({ baseUrl });\r\n\r\nexport const customFetchBase: BaseQueryFn<\r\n  string | FetchArgs,\r\n  unknown,\r\n  FetchBaseQueryError\r\n> = async (args, api, extraOptions) => {\r\n  return await baseQuery(args, api, extraOptions);\r\n};\r\n"],"mappings":"AAAA,SAGEA,cAAc,QAET,6BAA6B;AAOpC,OAAO,MAAMC,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,yBAA0B,GAAE;AAClE,OAAO,MAAMC,SAAS,GAAGL,cAAc,CAAC;EAAEC;AAAQ,CAAC,CAAC;AAEpD,OAAO,MAAMK,eAIZ,GAAG,OAAOC,IAAI,EAAEC,GAAG,EAAEC,YAAY,KAAK;EACrC,OAAO,MAAMJ,SAAS,CAACE,IAAI,EAAEC,GAAG,EAAEC,YAAY,CAAC;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
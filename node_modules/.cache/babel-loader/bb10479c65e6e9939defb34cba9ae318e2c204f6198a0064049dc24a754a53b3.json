{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null\n};\nexport const userSlice = createSlice({\n  initialState,\n  name: 'userSlice',\n  reducers: {\n    logout: () => initialState,\n    setUser: (state, action) => {\n      state.user = action.payload;\n    }\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  logout,\n  setUser\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","initialState","user","userSlice","name","reducers","logout","setUser","state","action","payload","reducer","actions"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/reducers/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type Roles = 'admin' | 'user';\r\n\r\nexport interface IUser {\r\n  id: string;\r\n  name: string;\r\n  role: Roles;\r\n}\r\n\r\ninterface IUserState {\r\n  user: IUser | null;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  user: null,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  initialState,\r\n  name: 'userSlice',\r\n  reducers: {\r\n    logout: () => initialState,\r\n    setUser: (state, action: PayloadAction<IUser>) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { logout, setUser } = userSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAc7D,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCC,YAAY;EACZG,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;IACRC,MAAM,EAAE,MAAML,YAAY;IAC1BM,OAAO,EAAE,CAACC,KAAK,EAAEC,MAA4B,KAAK;MAChDD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,eAAeP,SAAS,CAACQ,OAAO;AAEhC,OAAO,MAAM;EAAEL,MAAM;EAAEC;AAAQ,CAAC,GAAGJ,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
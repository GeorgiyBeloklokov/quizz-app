{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { customFetchBase } from '.';\nimport { logout, setToken, setIsAuth } from '../reducers/userSlice';\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: customFetchBase,\n  endpoints: builder => ({\n    loginUser: builder.mutation({\n      query(data) {\n        return {\n          url: 'auth/login',\n          method: 'POST',\n          body: data\n          //credentials: 'include',\n        };\n      },\n\n      async onQueryStarted(args, _ref) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref;\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          dispatch(setToken(data));\n          dispatch(setIsAuth(true));\n        } catch (error) {}\n      }\n    }),\n    logoutUser: builder.mutation({\n      query() {\n        return {\n          url: 'auth/logout',\n          credentials: 'include'\n        };\n      },\n      async onQueryStarted(args, _ref2) {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref2;\n        try {\n          await queryFulfilled;\n          dispatch(logout());\n        } catch (error) {}\n      }\n    })\n  })\n});\nexport const {\n  useLoginUserMutation,\n  useLogoutUserMutation\n} = authApi;","map":{"version":3,"names":["createApi","customFetchBase","logout","setToken","setIsAuth","authApi","reducerPath","baseQuery","endpoints","builder","loginUser","mutation","query","data","url","method","body","onQueryStarted","args","dispatch","queryFulfilled","error","logoutUser","credentials","useLoginUserMutation","useLogoutUserMutation"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/api/AuthApi.ts"],"sourcesContent":["import { createApi } from '@reduxjs/toolkit/query/react';\r\nimport { customFetchBase } from '.';\r\nimport { LoginInput } from '../../components/utils/types';\r\nimport { logout, setToken, setIsAuth } from '../reducers/userSlice';\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: customFetchBase,\r\n  endpoints: (builder) => ({\r\n    loginUser: builder.mutation<string, LoginInput>({\r\n      query(data) {\r\n        return {\r\n          url: 'auth/login',\r\n          method: 'POST',\r\n          body: data,\r\n          //credentials: 'include',\r\n        };\r\n      },\r\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(setToken(data));\r\n          dispatch(setIsAuth(true));\r\n        } catch (error) {}\r\n      },\r\n    }),\r\n    logoutUser: builder.mutation<void, void>({\r\n      query() {\r\n        return {\r\n          url: 'auth/logout',\r\n          credentials: 'include',\r\n        };\r\n      },\r\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\r\n        try {\r\n          await queryFulfilled;\r\n          dispatch(logout());\r\n        } catch (error) {}\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLoginUserMutation, useLogoutUserMutation } = authApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8BAA8B;AACxD,SAASC,eAAe,QAAQ,GAAG;AAEnC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,uBAAuB;AAEnE,OAAO,MAAMC,OAAO,GAAGL,SAAS,CAAC;EAC/BM,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEN,eAAe;EAC1BO,SAAS,EAAGC,OAAO,KAAM;IACvBC,SAAS,EAAED,OAAO,CAACE,QAAQ,CAAqB;MAC9CC,KAAK,CAACC,IAAI,EAAE;QACV,OAAO;UACLC,GAAG,EAAE,YAAY;UACjBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEH;UACN;QACF,CAAC;MACH,CAAC;;MACD,MAAMI,cAAc,CAACC,IAAI,QAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC;QACrD,IAAI;UACF,MAAM;YAAEP;UAAK,CAAC,GAAG,MAAMO,cAAc;UACrCD,QAAQ,CAAChB,QAAQ,CAACU,IAAI,CAAC,CAAC;UACxBM,QAAQ,CAACf,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOiB,KAAK,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;IACFC,UAAU,EAAEb,OAAO,CAACE,QAAQ,CAAa;MACvCC,KAAK,GAAG;QACN,OAAO;UACLE,GAAG,EAAE,aAAa;UAClBS,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACD,MAAMN,cAAc,CAACC,IAAI,SAAgC;QAAA,IAA9B;UAAEC,QAAQ;UAAEC;QAAe,CAAC;QACrD,IAAI;UACF,MAAMA,cAAc;UACpBD,QAAQ,CAACjB,MAAM,EAAE,CAAC;QACpB,CAAC,CAAC,OAAOmB,KAAK,EAAE,CAAC;MACnB;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,oBAAoB;EAAEC;AAAsB,CAAC,GAAGpB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
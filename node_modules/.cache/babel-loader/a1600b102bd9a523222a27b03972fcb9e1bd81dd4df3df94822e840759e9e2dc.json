{"ast":null,"code":"import { fetchBaseQuery } from '@reduxjs/toolkit/dist/query';\nexport const baseUrl = `${process.env.REACT_APP_SERVER_ENDPOINT}/`;\nexport const baseQuery = fetchBaseQuery({\n  baseUrl,\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const token = getState().users.token;\n    //console.log(getState());\n    //console.log('HEADERS', headers);\n    //headers.set('Access-Control-Allow-Headers', '*');\n    //headers.set('Access-Control-Allow-Origin', '*');\n    if (!headers.has('Authorization') && token) {\n      headers.set('Authorization', `Bearer ${token}`);\n      //headers.set('Access-Control-Allow-Headers', '*');\n    }\n\n    return headers;\n  }\n});\nexport const customFetchBase = async (args, api, extraOptions) => {\n  return await baseQuery(args, api, extraOptions);\n};","map":{"version":3,"names":["fetchBaseQuery","baseUrl","process","env","REACT_APP_SERVER_ENDPOINT","baseQuery","prepareHeaders","headers","getState","token","users","has","set","customFetchBase","args","api","extraOptions"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/api/index.ts"],"sourcesContent":["import {\r\n  BaseQueryFn,\r\n  FetchArgs,\r\n  fetchBaseQuery,\r\n  FetchBaseQueryError,\r\n} from '@reduxjs/toolkit/dist/query';\r\nimport { RootState } from '../store';\r\n\r\nexport interface IGenericResponse {\r\n  status: string;\r\n  message: string;\r\n}\r\n\r\nexport const baseUrl = `${process.env.REACT_APP_SERVER_ENDPOINT}/`;\r\nexport const baseQuery = fetchBaseQuery({\r\n  baseUrl,\r\n  prepareHeaders: (headers, { getState }) => {\r\n    const token = (getState() as RootState).users.token;\r\n    //console.log(getState());\r\n    //console.log('HEADERS', headers);\r\n    //headers.set('Access-Control-Allow-Headers', '*');\r\n    //headers.set('Access-Control-Allow-Origin', '*');\r\n    if (!headers.has('Authorization') && token) {\r\n      headers.set('Authorization', `Bearer ${token}`);\r\n      //headers.set('Access-Control-Allow-Headers', '*');\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport const customFetchBase: BaseQueryFn<\r\n  string | FetchArgs,\r\n  unknown,\r\n  FetchBaseQueryError\r\n> = async (args, api, extraOptions) => {\r\n  return await baseQuery(args, api, extraOptions);\r\n};\r\n"],"mappings":"AAAA,SAGEA,cAAc,QAET,6BAA6B;AAQpC,OAAO,MAAMC,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,yBAA0B,GAAE;AAClE,OAAO,MAAMC,SAAS,GAAGL,cAAc,CAAC;EACtCC,OAAO;EACPK,cAAc,EAAE,CAACC,OAAO,WAAmB;IAAA,IAAjB;MAAEC;IAAS,CAAC;IACpC,MAAMC,KAAK,GAAID,QAAQ,EAAE,CAAeE,KAAK,CAACD,KAAK;IACnD;IACA;IACA;IACA;IACA,IAAI,CAACF,OAAO,CAACI,GAAG,CAAC,eAAe,CAAC,IAAIF,KAAK,EAAE;MAC1CF,OAAO,CAACK,GAAG,CAAC,eAAe,EAAG,UAASH,KAAM,EAAC,CAAC;MAC/C;IACF;;IACA,OAAOF,OAAO;EAChB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,eAIZ,GAAG,OAAOC,IAAI,EAAEC,GAAG,EAAEC,YAAY,KAAK;EACrC,OAAO,MAAMX,SAAS,CAACS,IAAI,EAAEC,GAAG,EAAEC,YAAY,CAAC;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
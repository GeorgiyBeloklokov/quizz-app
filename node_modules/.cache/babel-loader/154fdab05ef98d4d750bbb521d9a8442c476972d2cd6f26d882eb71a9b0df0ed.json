{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './reducers/counterSlice';\nimport cardsReducer from './reducers/cardSlice';\nimport testsReducer from './reducers/testsSlice';\nimport usersReducer from './reducers/userSlice';\nimport { registrationApi } from './api/RegistrationApi';\nimport { authApi } from './api/AuthApi';\n\n// import { booksApi } from './booksApi';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    cards: cardsReducer,\n    tests: testsReducer,\n    users: usersReducer,\n    // [booksApi.reducerPath]: booksApi.reducer,\n    [registrationApi.reducerPath]: registrationApi.reducer,\n    [authApi.reducerPath]: authApi.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat([registrationApi.middleware, authApi.middleware])\n});","map":{"version":3,"names":["configureStore","counterReducer","cardsReducer","testsReducer","usersReducer","registrationApi","authApi","store","reducer","counter","cards","tests","users","reducerPath","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/store/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from './reducers/counterSlice';\r\nimport cardsReducer from './reducers/cardSlice';\r\nimport testsReducer from './reducers/testsSlice';\r\nimport usersReducer from './reducers/userSlice';\r\nimport { registrationApi } from './api/RegistrationApi';\r\nimport { authApi } from './api/AuthApi';\r\n\r\n// import { booksApi } from './booksApi';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    cards: cardsReducer,\r\n    tests: testsReducer,\r\n    users: usersReducer,\r\n    // [booksApi.reducerPath]: booksApi.reducer,\r\n    [registrationApi.reducerPath]: registrationApi.reducer,\r\n    [authApi.reducerPath]: authApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat([registrationApi.middleware, authApi.middleware]),\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,OAAO,QAAQ,eAAe;;AAEvC;;AAEA,OAAO,MAAMC,KAAK,GAAGP,cAAc,CAAC;EAClCQ,OAAO,EAAE;IACPC,OAAO,EAAER,cAAc;IACvBS,KAAK,EAAER,YAAY;IACnBS,KAAK,EAAER,YAAY;IACnBS,KAAK,EAAER,YAAY;IACnB;IACA,CAACC,eAAe,CAACQ,WAAW,GAAGR,eAAe,CAACG,OAAO;IACtD,CAACF,OAAO,CAACO,WAAW,GAAGP,OAAO,CAACE;EACjC,CAAC;EACDM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAAC,CAACX,eAAe,CAACS,UAAU,EAAER,OAAO,CAACQ,UAAU,CAAC;AAClF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
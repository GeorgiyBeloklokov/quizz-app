{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\diskD\\\\diskD\\\\my\\\\read-books\\\\src\\\\components\\\\TestItem\\\\TestItem.tsx\";\nimport { Box, CardMedia, Paper, RadioGroup, Typography } from '@mui/material';\nimport { QuestionItem } from './QuestionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestItem = props => {\n  const {\n    question,\n    score,\n    setScore\n  } = props;\n  const questionAnswers = question.answers;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      display: 'flex',\n      maxWidth: '700px',\n      margin: '0 auto',\n      alignItems: 'center',\n      padding: '15px',\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '20px',\n        padding: '20px',\n        maxWidth: question.img.length ? '350px' : '100%',\n        m: question.img.length ? '0 auto' : '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        children: questionAnswers.map((answer, id) => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          answer: answer,\n          score: score,\n          setScore: setScore,\n          rightAnsw: question.correctAnswer\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), question.img.length ? /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: question.img,\n      alt: \"card\",\n      height: 245,\n      sx: {\n        objectFit: 'contain',\n        maxWidth: '295px',\n        m: '0 auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TestItem;\nvar _c;\n$RefreshReg$(_c, \"TestItem\");","map":{"version":3,"names":["Box","CardMedia","Paper","RadioGroup","Typography","QuestionItem","TestItem","props","question","score","setScore","questionAnswers","answers","display","maxWidth","margin","alignItems","padding","flexWrap","flexDirection","gap","img","length","m","map","answer","id","correctAnswer","objectFit"],"sources":["C:/Users/georg/Desktop/diskD/diskD/my/read-books/src/components/TestItem/TestItem.tsx"],"sourcesContent":["import { Box, CardMedia, Paper, RadioGroup, Typography } from '@mui/material';\r\nimport { Dispatch, SetStateAction } from 'react';\r\nimport { IQuestion } from '../utils/types';\r\nimport { QuestionItem } from './QuestionItem';\r\n\r\ninterface ItestItem {\r\n  question: IQuestion;\r\n  score: number;\r\n  setScore: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nexport const TestItem = (props: ItestItem) => {\r\n  const { question, score, setScore } = props;\r\n  const questionAnswers = question.answers;\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        display: 'flex',\r\n        maxWidth: '700px',\r\n        margin: '0 auto',\r\n        alignItems: 'center',\r\n        padding: '15px',\r\n        flexWrap: 'wrap',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '20px',\r\n          padding: '20px',\r\n          maxWidth: question.img.length ? '350px' : '100%',\r\n          m: question.img.length ? '0 auto' : '0',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\">{question.question}</Typography>\r\n        <RadioGroup>\r\n          {questionAnswers.map((answer, id) => (\r\n            <QuestionItem\r\n              answer={answer}\r\n              key={id}\r\n              score={score}\r\n              setScore={setScore}\r\n              rightAnsw={question.correctAnswer}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </Box>\r\n      {question.img.length ? (\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={question.img}\r\n          alt=\"card\"\r\n          height={245}\r\n          sx={{ objectFit: 'contain', maxWidth: '295px', m: '0 auto' }}\r\n        />\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n};\r\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,UAAU,EAAEC,UAAU,QAAQ,eAAe;AAG7E,SAASC,YAAY,QAAQ,gBAAgB;AAAC;AAQ9C,OAAO,MAAMC,QAAQ,GAAIC,KAAgB,IAAK;EAC5C,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAC3C,MAAMI,eAAe,GAAGH,QAAQ,CAACI,OAAO;EACxC,oBACE,QAAC,KAAK;IACJ,EAAE,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE;IACZ,CAAE;IAAA,wBAEF,QAAC,GAAG;MACF,EAAE,EAAE;QACFL,OAAO,EAAE,MAAM;QACfM,aAAa,EAAE,QAAQ;QACvBC,GAAG,EAAE,MAAM;QACXH,OAAO,EAAE,MAAM;QACfH,QAAQ,EAAEN,QAAQ,CAACa,GAAG,CAACC,MAAM,GAAG,OAAO,GAAG,MAAM;QAChDC,CAAC,EAAEf,QAAQ,CAACa,GAAG,CAACC,MAAM,GAAG,QAAQ,GAAG;MACtC,CAAE;MAAA,wBAEF,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAA,UAAEd,QAAQ,CAACA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAc,eACzD,QAAC,UAAU;QAAA,UACRG,eAAe,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,EAAE,kBAC9B,QAAC,YAAY;UACX,MAAM,EAAED,MAAO;UAEf,KAAK,EAAEhB,KAAM;UACb,QAAQ,EAAEC,QAAS;UACnB,SAAS,EAAEF,QAAQ,CAACmB;QAAc,GAH7BD,EAAE;UAAA;UAAA;UAAA;QAAA,QAKV;MAAC;QAAA;QAAA;QAAA;MAAA,QACS;IAAA;MAAA;MAAA;MAAA;IAAA,QACT,EACLlB,QAAQ,CAACa,GAAG,CAACC,MAAM,gBAClB,QAAC,SAAS;MACR,SAAS,EAAC,KAAK;MACf,KAAK,EAAEd,QAAQ,CAACa,GAAI;MACpB,GAAG,EAAC,MAAM;MACV,MAAM,EAAE,GAAI;MACZ,EAAE,EAAE;QAAEO,SAAS,EAAE,SAAS;QAAEd,QAAQ,EAAE,OAAO;QAAES,CAAC,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7D,GACA,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEZ,CAAC;AAAC,KAhDWjB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}